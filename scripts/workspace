#!/bin/bash
# Enhanced script to create, list, and switch ephemeral workspaces.

set -e # Exit immediately if a command exits with a non-zero status.

# --- Configuration ---
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/config.sh"

# --- Derived Configurations ---
DETECTORS_DIR="$SCRIPT_DIR/detectors"
PROJECT_ROOT_DIR="$(cd "$SCRIPT_DIR/.." && pwd)"
CONFIG_FILE_PATH="$PROJECT_ROOT_DIR/$WORKSPACE_CONFIGS_FILE"
WARM_SCRIPT_PATH="$SCRIPT_DIR/warm_workspaces.sh"

# --- Helper Functions ---

show_help() {
    cat << EOF
Usage: workspace [COMMAND|PROJECT_NAME|GIT_URL]

A tool for creating, managing, and switching between ephemeral development workspaces.

COMMANDS:
  warm          Manually refresh all Git-based workspaces by fetching the latest changes.
  --help        Show this help message.

MODES:
  Interactive:  workspace
                Shows a searchable menu of recent workspaces (requires fzf for the best experience).

  Direct:       workspace <n>
                Switch to the n-th most recent workspace.

                workspace <name>
                Create or switch to a local workspace named <name>.

                workspace <git_url>
                Clone a git repository and create a new workspace.
EOF
}

_link_configs() {
    # ... (function is unchanged) ...
}

_symlink_artifacts() {
    # ... (function is unchanged) ...
}

init_database() {
    if ! command -v sqlite3 &> /dev/null; then echo "Error: sqlite3 is not installed." >&2; exit 1; fi
    if [ ! -f "$DB_FILE" ]; then
        sqlite3 "$DB_FILE" "CREATE TABLE workspaces (path TEXT PRIMARY KEY, git_url TEXT, last_access INTEGER, frequency INTEGER DEFAULT 1);"
    fi
}

_update_history() {
    # ... (function is unchanged) ...
}

_handle_interactive_selection() {
    # ... (function is unchanged) ...
}

_handle_numeric_selection() {
    # ... (function is unchanged) ...
}

_handle_project_creation_or_opening() {
    # ... (function is unchanged) ...
}

main() {
    case "$1" in
        --help|-h)
            show_help
            exit 0
            ;;
        warm)
            if [ -f "$WARM_SCRIPT_PATH" ]; then
                bash "$WARM_SCRIPT_PATH"
                echo "Workspace warming complete."
            else
                echo "Error: warm_workspaces.sh script not found." >&2
            fi
            exit 0
            ;;
        -*)
            echo "Error: Unknown option '$1'" >&2
            show_help >&2
            exit 1
            ;;
    esac

    init_database
    mkdir -p "$WORKSPACE_BASE_DIR"

    if [[ -z "$1" ]]; then
        local path_to_enter=$(_handle_interactive_selection)
        if [ -n "$path_to_enter" ]; then echo "__cd__:$path_to_enter"; fi
    elif [[ "$1" =~ ^[0-9]+$ ]]; then
        local path_to_enter=$(_handle_numeric_selection "$1")
        if [ -n "$path_to_enter" ]; then echo "__cd__:$path_to_enter"; fi
    else
        local path_to_enter=$(_handle_project_creation_or_opening "$1")
        if [ -n "$path_to_enter" ]; then echo "__cd__:$path_to_enter"; fi
    fi
}

main "$@"
